version: "3.9"

services:

  web:
    container_name: website
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000

    volumes:
      - ./backend/:/usr/src/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
#      - redis

  db:
    container_name: database
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.dev
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "6543:5432"

  tensorflow-servings:
    container_name: tfserving_classifier
    build: ./algorithms
    ports:
      - 8501:8501
    depends_on:
      - web

#  redis:
#    image: redis:6-alpine
#
#  celery:
#    build:
#      context: ./backend
#    command: celery worker --app=server --loglevel=info
#    volumes:
#      - ./backend/:/usr/src/app/
#    env_file:
#      - ./.env.dev
#    depends_on:
#      - db
#      - redis
#      - web
#
#  dashboard:
#    build: ./backend
#    command: flower -A server --port=5555 --broker=redis://redis:6379/0
#    ports:
#      - 5555:5555
#    env_file:
#      - ./.env.dev
#    depends_on:
#      - web
#      - redis
#      - celery

volumes:
  postgres_data:

