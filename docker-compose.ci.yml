version: "3.9"

services:
  web:
    container_name: backend
    image: "${WEB_IMAGE}"
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - django_static_volume:/usr/src/app/static
      - media:/usr/src/app/media
    expose:
      - 8000
    env_file:
      - .env
    command: gunicorn server.wsgi:application --bind 0.0.0.0:8000 --workers=17

  react:
    image: "${FRONTEND_IMAGE}"
    container_name: frontend
    build:
      context: ./frontend_GUI
      dockerfile: Dockerfile
      args:
        - REACT_APP_AXIOS_URL=http://64.227.106.224
    volumes:
      - react_static_volume:/usr/src/app/build/static
    expose:
      - 3000
    command: serve -s build -l 3000
    env_file:
      - .env
    depends_on:
      - web

  tensorflow-servings:
    image: "${TENSORFLOW_IMAGE}"
    build:
      context: ./algorithms
    ports:
      - 8501:8501
    depends_on:
      - web

  nginx:
    container_name: nginx
    restart: always
    build:
      context: ./nginx
    image: "${NGINX_IMAGE}"
    volumes:
      - django_static_volume:/usr/src/app/django_files/static
      - react_static_volume:/usr/src/app/react_files/static
      - media:/usr/src/app/media
    ports:
      - 80:80
    depends_on:
      - web
      - react

  redis:
    container_name: redis
    image: "redis:alpine"

  celery:
    image: "${CELERY_IMAGE}"
    container_name: celery
    build:
      context: ./backend
    command: celery -A server worker -l INFO
    volumes:
      - django_static_volume:/usr/src/app/static
      - media:/usr/src/app/media
    env_file:
      - .env
    depends_on:
      - redis

volumes:
  postgres_data:
  django_static_volume:
  react_static_volume:
  media:

