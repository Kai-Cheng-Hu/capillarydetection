version: "3.9"

services:
  web:
    container_name: backend
    image: "${WEB_IMAGE}"
    command: gunicorn server.asgi:application --bind 0.0.0.0:8000
    volumes:
      - django_static_volume:/usr/src/app/static
      - media:/usr/src/app/media
    env_file: .env

  react:
    image: "${FRONTEND_IMAGE}"
    container_name: frontend
    volumes:
      - react_static_volume:/usr/src/app/build/static
    command: serve -s build -l 3000
    depends_on:
      - web
    env_file:
      - .env

  tensorflow-servings:
    image: "${TENSORFLOW_IMAGE}"
    container_name: tensorflow_serving
    depends_on:
      - web

  nginx:
    container_name: nginx
    restart: always
    image: "${NGINX_IMAGE}"
    volumes:
      - django_static_volume:/usr/src/app/django_files/static
      - react_static_volume:/usr/src/app/react_files/static
      - media:/usr/src/app/media
    ports:
      - "80:80"
    depends_on:
      - web
      - react

  redis:
    container_name: redis
    image: "redis:alpine"

  celery:
    image: "${CELERY_IMAGE}"
    container_name: celery
    command: celery -A server worker -l INFO
    volumes:
      - django_static_volume:/usr/src/app/static
      - media:/usr/src/app/media
    env_file:
      - .env
    depends_on:
      - redis

volumes:
  postgres_data:
  django_static_volume:
  react_static_volume:
  media:
