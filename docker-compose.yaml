version: "3.9"

services:
  web:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - django_static_volume:/usr/src/app/static
      - media:/usr/src/app/media
    expose:
      - 8000
    env_file:
      - ./backend/backend_apps/.env
    command: gunicorn server.wsgi:application --bind 0.0.0.0:8000
    depends_on:
      - db

  react:
    container_name: frontend
    build:
      context: ./frontend_GUI
      dockerfile: Dockerfile
      args:
        - REACT_APP_AXIOS_URL=http://127.0.0.1
    volumes:
      - react_static_volume:/usr/src/app/build/static
    expose:
      - 3000
    env_file:
      - frontend_GUI/gui/.env
    command: serve -s build -l 3000
    depends_on:
      - web

  db:
    container_name: database
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - backend/backend_apps/.env

  tensorflow-servings:
    container_name: tfserving_classifier
    build: ./algorithms
    ports:
      - 8501:8501
    depends_on:
      - web

  nginx:
    container_name: nginx
    restart: always
    build: ./nginx
    volumes:
      - django_static_volume:/usr/src/app/django_files/static
      - react_static_volume:/usr/src/app/react_files/static
      - media:/usr/src/app/media

    ports:
      - 80:80
    depends_on:
      - react

  redis:
    container_name: redis
    image: "redis:alpine"


  celery:
    container_name: celery
    build:
      context: ./backend
    command: celery -A server worker -l INFO
    volumes:
      - django_static_volume:/usr/src/app/static
      - media:/usr/src/app/media
    env_file:
      - backend/backend_apps/.env
    depends_on:
      - redis

  flower:
    container_name: flower
    build: ./backend
    command: celery flower worker -l INFO
    ports:
      - 5556:5555
    environment:
      - FLASK_DEBUG=1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - celery
      - web
      - react

volumes:
  postgres_data:
  django_static_volume:
  react_static_volume:
  media:

